{"version":3,"sources":["GIFCapture.js","GIFPreview.js","CaptureGIFScreen.js","PlayGIFScreen.js","App.js","serviceWorker.js","index.js","photo-camera.svg","three-dots.svg","pattern.svg"],"names":["GIFCapture","state","video","progress","stream","gifshot","webcamVideoElement","this","keepCameraOn","cameraStream","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","obj","wrap","_context","prev","next","_this2","setState","stop","_x","apply","arguments","getTracks","forEach","track","document","getElementById","startCamera","window","onfocus","_this3","onblur","stopCamera","_this4","gifWidth","gifHeight","numFrames","progressCallback","completeCallback","error","props","saveGIF","image","_this5","react_default","createElement","className","style","zIndex","padding","position","left","transform","top","display","justifyContent","alignItems","src","loader","width","bottom","es","percent","strokeWidth","strokeColor","background","fontWeight","color","border","fontSize","outline","onClick","captureGIF","id","Component","GIFPreview","submitting","Axios","post","gif","split","headers","Authorization","secrets","imgur","client_id","res","deletehash","data","concat","albumId","deletehashes","alert","exit","height","overflow","backgroundSize","margin","backgroundColor","borderRadius","bind","submitGIF","CaptureGIFScreen","capturing","src_GIFCapture","setGIF","match","params","src_GIFPreview","capture","PlayGIFScreen","gifs","index","bpm","multi","flip","getGifs","changeGifs","getGIFs","setInterval","changeGIF","clearInterval","Math","floor","length","random","get","albumid","images","minHeight","link","lib","value","right","App","history","push","bg","boxSizing","Route","path","exact","render","flexDirection","maxWidth","boxShadow","textAlign","onChange","e","target","placeholder","Link","to","marginRight","flex","cursor","textDecoration","createAlbum","src_CaptureGIFScreen","assign","src_PlayGIFScreen","withRouter","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","HashRouter","src_App_0","URL","process","href","origin","addEventListener","fetch","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.1a6631e5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport * as gifshot from 'gifshot';\nimport {Circle} from 'rc-progress';\nimport loader from './photo-camera.svg';\n\nclass GIFCapture extends Component {\n\n  state = {\n    video: null,\n    progress: 0,\n    stream: null\n  }\n\n  async startCamera(){\n    gifshot.takeSnapShot({\n      'webcamVideoElement': this.state.video,\n      'keepCameraOn': true,\n      'cameraStream': this.state.stream}, async obj => {\n          await this.setState({stream: obj.cameraStream});\n      }); \n  }\n\n  async stopCamera(){\n    if(this.state.stream !== null) this.state.stream.getTracks().forEach(track => track.stop());\n    this.setState({stream: null});\n  }\n  \n  async componentDidMount(){\n    await this.setState({video: document.getElementById(\"preview-video\")})\n    this.startCamera();\n    window.onfocus = () => {this.startCamera()};\n    window.onblur = () =>{this.stopCamera()};\n  }\n\n  async componentWillUnmount(){\n    this.stopCamera();\n    window.onfocus = null;\n    window.onblur = null;\n  }\n\n  captureGIF(){\n    this.setState({progress: .025});\n    gifshot.createGIF({\n        'gifWidth': 352,\n        'gifHeight': 240,\n      // You can pass an existing video element to use for the webcam GIF creation process,\n      // and this video element will not be hidden (useful when used with the keepCameraOn option)\n      // Pro tip: Set the height and width of the video element to the same values as your future GIF\n      // Another Pro Tip: If you use this option, the video will not be paused, the object url not revoked, and\n      // the video will not be removed from the DOM.  You will need to handle this yourself.\n      // Whether or not you would like the user's camera to stay on after the GIF is created\n      // Note: The cameraStream Media object is passed back to you in the createGIF() callback function\n\n      // Expects a cameraStream Media object\n      // Note: Passing an existing camera stream will allow you to create another GIF and/or snapshot without\n      //\tasking for the user's permission to access the camera again if you are not using SSL\n      'cameraStream': this.state.stream,\n      'numFrames': 15,\n      'progressCallback': (progress) => {this.setState({progress: progress});},\n      'completeCallback': () => {this.setState({progress: 0})}\n    }, (obj) => {\n      if(!obj.error) {\n        this.props.saveGIF(obj.image);\n      }\n    });\n  }\n\n  render() {\n    return (\n        <div className=\"video-container\" style={{zIndex: 100}}>\n            <div style={{padding: '2rem', position: 'absolute',left: '50%', transform: 'translate(-50%, -50%)', top: '33%', zIndex: 1, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n                <img src={loader} className=\"camera-loader\"  />\n            </div>\n            <div style={{width: '100px', position: 'absolute', bottom: '4rem', left: '50%', transform: 'translateX(-50%)', zIndex: 3}}>\n                <Circle percent={this.state.progress * 100} strokeWidth=\"10\" strokeColor=\"#e74c3c\" />\n                {this.state.progress === 0 ? <button style={{ padding: '2rem', position: 'absolute',left: '50%', transform: 'translate(-50%, -50%)', top: '48%', background: 'transparent', fontWeight: 'bold', color: 'white', border: 'none', fontSize: '2rem', outline: 'none'}} onClick={() => this.captureGIF()}>Rec.</button> : \"\" }\n\n            </div>\n            <video className=\"video\" id=\"preview-video\" style={{zIndex: 2}}></video>\n        </div>\n    );\n  }\n}\n\nexport default GIFCapture;\n","import React, { Component } from 'react';\nimport Axios from 'axios';\nimport secrets from './secrets/config.json';\nimport loader from './three-dots.svg';\n\nclass GIFPreview extends Component {\n\n  state = {\n    submitting: false\n  }\n  async submitGIF(image){\n    try{\n      this.setState({submitting: true});\n      let res = await Axios.post('https://api.imgur.com/3/image', {image: this.props.gif.split(',')[1]}, {headers: {Authorization: \"Client-ID \" + secrets.imgur.client_id}});\n      let deletehash = res.data.data.deletehash;\n      await Axios.post(`https://api.imgur.com/3/album/${this.props.albumId}/add`, {deletehashes:[deletehash]}, {headers: {Authorization: \"Client-ID \" + secrets.imgur.client_id}});\n    }catch(error){\n      alert('Error Uploading :(');\n    }\n    this.setState({submitting: false});\n    this.props.exit();\n  }\n\n  render() {\n    return (\n      <div style={{width: '100vw', height: '100vh', overflow: 'hidden', display: 'flex', alignItems:'center', background: `url(${this.props.gif}) no-repeat center center fixed`,\n      backgroundSize: 'cover'}}>\n       \n       <button style={{position: 'absolute', margin: '0 auto', top: '1rem', left: '1rem', backgroundColor: '#e74c3c', outline: 'none', border: 'none', height: '2rem', width: '2rem', borderRadius: '50%',fontSize: '1rem', color: 'white', fontWeight: 'bold'}} onClick={this.props.exit.bind(this)}>X</button>\n       {this.state.submitting ? <img src={loader} style={{position: 'absolute', margin: '0 auto', bottom: '4rem', left: '50%', transform: 'translateX(-50%)'}} /> : <button style={{position: 'absolute', margin: '0 auto', bottom: '4rem', left: '50%', transform: 'translateX(-50%)', fontSize: '2rem', color: 'white', fontWeight: 'bold', background: '#27ae60', borderRadius: '2rem', border: 'none', outline: 'none', padding: '.5rem 2.5rem'}} onClick={this.submitGIF.bind(this)}>Submit</button>}\n\n      </div>\n    );\n  }\n}\n\nexport default GIFPreview;\n","import React, { Component } from 'react';\nimport './App.css';\nimport GIFCapture from './GIFCapture';\nimport GIFPreview from './GIFPreview';\n\nclass CaptureGIFScreen extends Component {\n\n  state = {\n    gif: \"http://i.imgur.com/IUNMjf1.gif\",\n    capturing: true\n  }\n\n  setGIF(gif){\n      this.setState({gif: gif, capturing: false});\n  }\n\n  capture(){\n      this.setState({capturing: true});\n  }\n\n  render() {\n    return (\n      <div style={{width: '100%', height: '100%'}}>\n        {this.state.capturing ? \n        <GIFCapture saveGIF={this.setGIF.bind(this)} albumId={this.props.match.params.deletehash}/> \n        : \n        <GIFPreview gif={this.state.gif} albumId={this.props.match.params.deletehash} exit={this.capture.bind(this)}/>\n        }   \n      </div>\n    );\n  }\n}\n\nexport default CaptureGIFScreen;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Axios from 'axios';\nimport secrets from './secrets/config.json';\nimport * as QRCode from 'qrcode.react';\n\nclass PlayGIFScreen extends Component {\n\n  state = {\n    video: null,\n    gifs: [],\n    index: 0,\n    progress: 0,\n    bpm: 60,\n    multi: true,\n    flip: false,\n    getGifs: null,\n    changeGifs: null\n  }\n\n  componentDidMount(){\n    this.getGIFs();\n    let getGifs = setInterval(() => {\n        this.getGIFs();\n    }, 60000);\n    let changeGifs = setInterval(() => {\n        this.changeGIF();\n    }, 15000);\n    this.setState({getGifs: getGifs, changeGifs: changeGifs});\n  }\n\n  componentWillUnmount(){\n    clearInterval(this.state.getGifs);\n    clearInterval(this.state.changeGifs);\n    this.setState({getGifs: null, changeGifs: null});\n  }\n\n  changeGIF(){\n    this.setState({index: Math.floor(this.state.gifs.length * Math.random()), multi: (Math.random() >= 0.5), flip: (Math.random() >= 0.5)})\n  }\n  async getGIFs(){\n    //await Axios.get(`https://imgur.com/a/${this.this.props.match.params.albumid}`);\n    let res = await Axios.get(`https://api.imgur.com/3/album/${this.props.match.params.albumid}`, {headers: {Authorization: \"Client-ID \" + secrets.imgur.client_id}});\n    let gifs = res.data.data.images;\n    //console.log(gifs);\n    this.setState({gifs: gifs});\n  }\n\n  render() {\n    return (\n      <div className=\"App\" style={{height: '100vh', width: '100vw'}}>\n          {this.state.gifs.length > 0 ? <div style={{width: '100%', height: '100%', minHeight: '100vh', transform: `scale(${this.state.flip ? -1 : 1})`, background: `url(${this.state.gifs[this.state.index].link}) ${this.state.multi ? 'center center / cover' : ''}`}} /> : \"\"}\n          {this.props.deletehash? <QRCode value={`https://johnnyracket.github.io/gif-beat/#/record/${this.props.deletehash}`}  style={{position: 'absolute', bottom: '1rem', right: '1rem', padding: '.5rem', background: 'white'}}/> : \"\" }\n      </div>\n    );\n  }\n}\n\nexport default PlayGIFScreen;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Axios from 'axios';\nimport { Route, Link, withRouter } from \"react-router-dom\";\nimport CaptureGIFScreen from './CaptureGIFScreen';\nimport PlayGIFScreen from './PlayGIFScreen';\nimport secrets from './secrets/config.json';\nimport bg from './pattern.svg';\n\nclass App extends Component {\n\n  state = {\n    albumId: \"\",\n    deletehash: \"\"\n  }\n\n  async createAlbum(){\n    let res = await Axios.post(\"https://api.imgur.com/3/album\", {} ,{headers: {Authorization: \"Client-ID \" + secrets.imgur.client_id}});\n    //console.log(res.data.data.id);\n    //console.log(res.data.data.deletehash);\n    await this.setState({albumId: res.data.data.id, deletehash: res.data.data.deletehash});\n    this.props.history.push(\"/view/\" + this.state.albumId);\n  }\n\n\n\n  render() {\n    return (\n      <div style={{width: '100%', height: '100%', minHeight: '100vh', background: `URL(${bg})`, boxSizing: 'border-box' }}>\n        <Route path=\"/\" exact render={() => (\n          <div style={{width: '100%', height: '100%',  padding: '4rem 1rem',  boxSizing: 'border-box' }}>\n            <div style={{display:'flex', flexDirection: 'column', width: '100%', maxWidth: '20rem', margin: '0 auto', background: 'white', padding: '2rem', borderRadius: '1rem', boxShadow: '0 0 90px 60px #fff', boxSizing: 'border-box'}}>\n            <h1 style={{color:'#f0932b', fontWeight: 'bold', fontSize: '5rem', textAlign: 'center', margin: '1rem 0 2rem'}}>Gif Beat</h1>\n              <input onChange={e => this.setState({albumId: e.target.value})} placeholder='ID Here...' style={{fontSize: '3rem', borderRadius: '.5rem', border: 'solid 4px #f0932b', padding: '.25rem .5rem', outline: 'none'}}></input>\n              <div style={{display: 'flex', flexDirection: 'row', margin: '1rem 0', alignItems: 'center'}}>\n                <Link to={\"/record/\" + this.state.albumId} style={{marginRight: '1rem', fontSize: '2rem', flex : 1, background:'#f0932b', padding: '1rem 0', borderRadius: '.5rem', border: 'none', fontWeight: 'bold', color: 'white', cursor: 'pointer', textAlign: 'center', textDecoration: 'none'}}>Join!</Link>\n                <Link to={\"/view/\" + this.state.albumId} style={{fontSize: '1rem', color: '#f0932b', background: 'transparent', outline: 'none', border: 'none', cursor: 'pointer', textAlign: 'center', textDecoration: 'none'}} >Re-Host</Link>\n              </div>\n              <div style={{margin: '0 auto', fontSize: '1.5rem', color: 'lightgrey'}}> or </div>\n              <button onClick={() => {this.createAlbum()}} style={{margin: '1rem 0', fontSize: '1.5rem', fontWeight: 'bold', color: '#f0932b', background: 'transparent', outline: 'none', border: 'none', cursor: 'pointer'}}>Create Party</button>\n            </div>\n          </div>\n        )}>\n        </Route>\n        <Route path=\"/record/:deletehash?\" render={(props) => <CaptureGIFScreen albumId={this.state.albumId} {...props} />} />\n        <Route path=\"/view/:albumid?\" render={(props) => <PlayGIFScreen albumId={this.state.albumId} deletehash={this.state.deletehash} {...props} />} />\n      </div>      \n    );}\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter} from \"react-router-dom\";\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/photo-camera.cab0ad14.svg\";","module.exports = __webpack_public_path__ + \"static/media/three-dots.7627bc82.svg\";","module.exports = __webpack_public_path__ + \"static/media/pattern.4c18f130.svg\";"],"sourceRoot":""}