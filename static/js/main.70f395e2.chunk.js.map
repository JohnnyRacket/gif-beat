{"version":3,"sources":["GIFCapture.js","GIFPreview.js","CaptureGIFScreen.js","PlayGIFScreen.js","App.js","serviceWorker.js","index.js","pattern.svg"],"names":["GIFCapture","state","video","progress","stream","this","setState","document","getElementById","gifshot","webcamVideoElement","keepCameraOn","cameraStream","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","obj","wrap","_context","prev","next","console","log","_this2","stop","_x","apply","arguments","_this3","gifWidth","gifHeight","text","props","albumId","fontWeight","fontSize","minFontSize","resizeFont","fontFamily","fontColor","textAlign","textBaseline","numFrames","progressCallback","completeCallback","error","saveGIF","image","_this4","react_default","createElement","className","style","zIndex","width","position","bottom","left","transform","es","percent","strokeWidth","strokeColor","top","background","color","border","outline","onClick","captureGIF","id","Component","GIFPreview","Axios","post","gif","split","headers","Authorization","secrets","imgur","client_id","res","deletehash","data","concat","deletehashes","exit","height","overflow","display","alignItems","backgroundSize","margin","borderRadius","padding","submitGIF","bind","backgroundColor","CaptureGIFScreen","capturing","src_GIFCapture","setGIF","src_GIFPreview","capture","PlayGIFScreen","gifs","index","bpm","pingpong","getGIFs","setInterval","Math","floor","length","random","get","images","fill","ping-pong","src","link","App","captureScreen","hostScreen","ids","title","minHeight","bg","boxSizing","flexDirection","maxWidth","boxShadow","onChange","e","target","value","placeholder","marginRight","flex","cursor","createAlbum","src_CaptureGIFScreen","src_PlayGIFScreen","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.70f395e2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport * as gifshot from 'gifshot';\nimport {Circle} from 'rc-progress';\n\nclass GIFCapture extends Component {\n\n  state = {\n    video: null,\n    progress: 0,\n    stream: null\n  }\n  \n  async componentDidMount(){\n    await this.setState({video: document.getElementById(\"preview-video\")})\n    gifshot.takeSnapShot({\n    'webcamVideoElement': this.state.video,\n    'keepCameraOn': true,\n    'cameraStream': this.state.stream}, async obj => {\n        console.log(obj);\n        await this.setState({stream: obj.cameraStream});\n        console.log('sdfdl');\n    });\n    \n  }\n\n  captureGIF(){\n\n    gifshot.createGIF({\n        'gifWidth': 352,\n        'gifHeight': 240,\n      // You can pass an existing video element to use for the webcam GIF creation process,\n      // and this video element will not be hidden (useful when used with the keepCameraOn option)\n      // Pro tip: Set the height and width of the video element to the same values as your future GIF\n      // Another Pro Tip: If you use this option, the video will not be paused, the object url not revoked, and\n      // the video will not be removed from the DOM.  You will need to handle this yourself.\n      // Whether or not you would like the user's camera to stay on after the GIF is created\n      // Note: The cameraStream Media object is passed back to you in the createGIF() callback function\n      'keepCameraOn': true,\n      // Expects a cameraStream Media object\n      // Note: Passing an existing camera stream will allow you to create another GIF and/or snapshot without\n      //\tasking for the user's permission to access the camera again if you are not using SSL\n      'cameraStream': this.state.stream,\n      'text': this.props.albumId,\n      // The font weight of the text that covers the animated GIF\n      'fontWeight': 'bold',\n      // The font size of the text that covers the animated GIF\n      'fontSize': '16px',\n      // The minimum font size of the text that covers the animated GIF\n      // Note: This option is only applied if the text being applied is cut off\n      'minFontSize': '10px',\n      // Whether or not the animated GIF text will be resized to fit within the GIF container\n      'resizeFont': false,\n      // The font family of the text that covers the animated GIF\n      'fontFamily': 'sans-serif',\n      // The font color of the text that covers the animated GIF\n      'fontColor': '#ffffff',\n      // The horizontal text alignment of the text that covers the animated GIF\n      'textAlign': 'right',\n      // The vertical text alignment of the text that covers the animated GIF\n      'textBaseline': 'bottom',\n      'numFrames': 15,\n      'progressCallback': (progress) => {this.setState({progress: progress});},\n      'completeCallback': () => {this.setState({progress: 0});console.log('done')}\n    }, (obj) => {\n      if(!obj.error) {\n        console.log(obj);\n        this.props.saveGIF(obj.image);\n      }\n    });\n  }\n\n  render() {\n    return (\n        <div className=\"video-container\" style={{zIndex: 100}}>\n            <div style={{width: '100px', position: 'absolute', bottom: '4rem', left: '50%', transform: 'translateX(-50%)'}}>\n                <Circle percent={this.state.progress * 100} strokeWidth=\"10\" strokeColor=\"#e74c3c\" />\n                <button style={{position: 'absolute',left: '50%', transform: 'translate(-50%, -50%)', top: '48%', background: 'transparent', fontWeight: 'bold', color: 'white', border: 'none', fontSize: '2rem', outline: 'none'}} onClick={() => this.captureGIF()}>Rec.</button>\n\n            </div>\n            <video className=\"video\" id=\"preview-video\"></video>\n        </div>\n    );\n  }\n}\n\nexport default GIFCapture;\n","import React, { Component } from 'react';\nimport Axios from 'axios';\nimport secrets from './secrets/config.json';\n\nclass GIFPreview extends Component {\n\n  async submitGIF(image){\n    console.log(this.props.albumId);\n    let res = await Axios.post('https://api.imgur.com/3/image', {image: this.props.gif.split(',')[1]}, {headers: {Authorization: \"Client-ID \" + secrets.imgur.client_id}});\n    console.log(res);\n    let deletehash = res.data.data.deletehash;\n    await Axios.post(`https://api.imgur.com/3/album/${this.props.albumId}/add`, {deletehashes:[deletehash]}, {headers: {Authorization: \"Client-ID \" + secrets.imgur.client_id}});\n    this.props.exit();\n  }//8UFXOXUBAfgygf4\n\n  render() {\n    return (\n      <div style={{width: '100vw', height: '100vh', overflow: 'hidden', display: 'flex', alignItems:'center', background: `url(${this.props.gif}) no-repeat center center fixed`,\n      backgroundSize: 'cover'}}>\n       \n       <button style={{position: 'absolute', margin: '0 auto', bottom: '4rem', left: '50%', transform: 'translateX(-50%)', fontSize: '2rem', color: 'white', fontWeight: 'bold', background: '#27ae60', borderRadius: '2rem', border: 'none', outline: 'none', padding: '.5rem 2.5rem'}} onClick={this.submitGIF.bind(this)}>Submit</button>\n       <button style={{position: 'absolute', margin: '0 auto', top: '1rem', left: '1rem', backgroundColor: '#e74c3c', outline: 'none', border: 'none', height: '2rem', width: '2rem', borderRadius: '50%',fontSize: '1rem', color: 'white', fontWeight: 'bold'}} onClick={this.props.exit.bind(this)}>X</button>\n      </div>\n    );\n  }\n}\n\nexport default GIFPreview;\n","import React, { Component } from 'react';\nimport './App.css';\nimport GIFCapture from './GIFCapture';\nimport GIFPreview from './GIFPreview';\n\nclass CaptureGIFScreen extends Component {\n\n  state = {\n    gif: \"http://i.imgur.com/IUNMjf1.gif\",\n    capturing: true\n  }\n\n  setGIF(gif){\n      this.setState({gif: gif, capturing: false});\n  }\n\n  capture(){\n      this.setState({capturing: true});\n  }\n\n  render() {\n    return (\n      <div style={{width: '100%', height: '100%'}}>\n        {this.state.capturing ? \n        <GIFCapture saveGIF={this.setGIF.bind(this)} albumId={this.props.albumId}/> \n        : \n        <GIFPreview gif={this.state.gif} albumId={this.props.albumId} exit={this.capture.bind(this)}/>\n        }   \n      </div>\n    );\n  }\n}\n\nexport default CaptureGIFScreen;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Axios from 'axios';\nimport secrets from './secrets/config.json';\n\nclass PlayGIFScreen extends Component {\n\n  state = {\n    video: null,\n    gifs: [],\n    index: 0,\n    progress: 0,\n    bpm: 60,\n    pingpong: true\n  }\n\n  componentDidMount(){\n      this.getGIFs();\n    setInterval(() => {\n        this.getGIFs();\n    }, 300000);\n    setInterval(() => {\n        this.setState({index: Math.floor(this.state.gifs.length * Math.random()), pingpong: (Math.random() >= 0.5)})\n    }, 20000);\n  }\n\n  async getGIFs(){\n    let res = await Axios.get(`https://api.imgur.com/3/album/${this.props.albumId}`, {headers: {Authorization: \"Client-ID \" + secrets.imgur.client_id}});\n    let gifs = res.data.data.images;\n    console.log(gifs);\n    this.setState({gifs: gifs});\n  }\n\n  render() {\n    return (\n      <div className=\"App\" style={{height: '100vh', width: '100vw'}}>\n          {this.state.gifs.length > 0 ? <x-gif fill ping-pong={this.state.pingpong} bpm={this.state.bpm} src={this.state.gifs[this.state.index].link}></x-gif> : <x-gif fill src=\"https://i.imgur.com/IUNMjf1.gif\"></x-gif>}\n          <button style={{position: 'absolute', bottom: '2rem', left: '2rem'}} onClick={() => this.getGIFs()}>🔄</button>\n      </div>\n    );\n  }\n}\n\nexport default PlayGIFScreen;\n","import React, { Component } from 'react';\nimport './App.css';\nimport CaptureGIFScreen from './CaptureGIFScreen';\nimport PlayGIFScreen from './PlayGIFScreen';\nimport Axios from 'axios';\nimport secrets from './secrets/config.json';\nimport bg from './pattern.svg';\n\nclass App extends Component {\n\n  state = {\n    captureScreen: false,\n    hostScreen: false,\n    albumId: \"Xb6wU\",\n    deletehash: \"\"\n  }\n\n  async createAlbum(){\n    let res = await Axios.post(\"https://api.imgur.com/3/album\",{ids: [\"IUNMjf1\"], title:'test'} ,{headers: {Authorization: \"Client-ID \" + secrets.imgur.client_id}});\n    console.log(res.data.data.id);\n    console.log(res.data.data.deletehash);\n    this.setState({albumId: res.data.data.id, deletehash: res.data.data.deletehash, hostScreen: true});\n    console.log('create album called');\n  }\n\n\n\n  render() {\n    return (\n      <div style={{width: '100%', height: '100%', minHeight: '100vh', background: `URL(${bg})`, boxSizing: 'border-box' }}>\n        {!this.state.captureScreen && !this.state.hostScreen ? (\n        <div style={{width: '100%', height: '100%',  padding: '4rem 1rem',  boxSizing: 'border-box' }}>\n          <div style={{display:'flex', flexDirection: 'column', width: '100%', maxWidth: '20rem', margin: '0 auto', background: 'white', padding: '2rem', borderRadius: '1rem', boxShadow: '0 0 90px 60px #fff', boxSizing: 'border-box'}}>\n          <h1 style={{color:'#f0932b', fontWeight: 'bold', fontSize: '5rem', textAlign: 'center', margin: '1rem 0 2rem'}}>Gif Beat</h1>\n            <input onChange={e => this.setState({albumId: e.target.value})} placeholder='ID Here...' style={{fontSize: '3rem', borderRadius: '.5rem', border: 'solid 4px #f0932b', padding: '.25rem .5rem', outline: 'none'}}></input>\n            <div style={{display: 'flex', flexDirection: 'row', margin: '1rem 0'}}>\n              <button onClick={() => {this.setState({captureScreen: true})}} style={{marginRight: '1rem', fontSize: '2rem', flex : 1, background:'#f0932b', padding: '1rem 0', borderRadius: '.5rem', border: 'none', fontWeight: 'bold', color: 'white', cursor: 'pointer'}}>Join!</button>\n              <button onClick={() => {this.setState({hostScreen: true})}} style={{fontSize: '1rem', color: '#f0932b', background: 'transparent', outline: 'none', border: 'none', cursor: 'pointer'}} >Re-Host</button>\n            </div>\n            <div style={{margin: '0 auto', fontSize: '1.5rem', color: 'lightgrey'}}> or </div>\n            <button onClick={() => {this.createAlbum()}} style={{margin: '1rem 0', fontSize: '1.5rem', fontWeight: 'bold', color: '#f0932b', background: 'transparent', outline: 'none', border: 'none', cursor: 'pointer'}}>Create Party</button>\n          </div>\n        </div>) : \"\" }\n        { this.state.captureScreen ? <CaptureGIFScreen albumId={this.state.albumId} /> : \"\"}\n        { this.state.hostScreen ? <PlayGIFScreen albumId={this.state.albumId} /> : \"\" }\n      </div>\n      \n    );}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/pattern.4c18f130.svg\";"],"sourceRoot":""}