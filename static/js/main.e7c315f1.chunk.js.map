{"version":3,"sources":["GIFCapture.js","GIFPreview.js","CaptureGIFScreen.js","PlayGIFScreen.js","App.js","serviceWorker.js","index.js","three-dots.svg","pattern.svg"],"names":["GIFCapture","state","video","progress","stream","this","setState","document","getElementById","gifshot","webcamVideoElement","keepCameraOn","cameraStream","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","obj","wrap","_context","prev","next","_this2","stop","_x","apply","arguments","_this3","gifWidth","gifHeight","numFrames","progressCallback","completeCallback","error","props","saveGIF","image","_this4","react_default","createElement","className","style","zIndex","width","position","bottom","left","transform","es","percent","strokeWidth","strokeColor","padding","top","background","fontWeight","color","border","fontSize","outline","onClick","captureGIF","id","Component","GIFPreview","submitting","Axios","post","gif","split","headers","Authorization","secrets","imgur","client_id","res","deletehash","data","concat","albumId","deletehashes","alert","exit","height","overflow","display","alignItems","backgroundSize","margin","backgroundColor","borderRadius","bind","src","loader","submitGIF","CaptureGIFScreen","capturing","src_GIFCapture","setGIF","match","params","src_GIFPreview","capture","PlayGIFScreen","gifs","index","bpm","multi","flip","getGIFs","setInterval","changeGIF","Math","floor","length","random","get","albumid","images","console","log","minHeight","link","lib","value","right","App","history","push","bg","boxSizing","Route","path","exact","render","flexDirection","maxWidth","boxShadow","textAlign","onChange","e","target","placeholder","Link","to","marginRight","flex","cursor","textDecoration","createAlbum","src_CaptureGIFScreen","assign","src_PlayGIFScreen","withRouter","Boolean","window","location","hostname","ReactDOM","HashRouter","src_App_0","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.e7c315f1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport * as gifshot from 'gifshot';\nimport {Circle} from 'rc-progress';\n\nclass GIFCapture extends Component {\n\n  state = {\n    video: null,\n    progress: 0,\n    stream: null\n  }\n  \n  async componentDidMount(){\n    await this.setState({video: document.getElementById(\"preview-video\")})\n    gifshot.takeSnapShot({\n    'webcamVideoElement': this.state.video,\n    'keepCameraOn': true,\n    'cameraStream': this.state.stream}, async obj => {\n        await this.setState({stream: obj.cameraStream});\n    });\n    \n  }\n\n  captureGIF(){\n    this.setState({progress: .025});\n    gifshot.createGIF({\n        'gifWidth': 352,\n        'gifHeight': 240,\n      // You can pass an existing video element to use for the webcam GIF creation process,\n      // and this video element will not be hidden (useful when used with the keepCameraOn option)\n      // Pro tip: Set the height and width of the video element to the same values as your future GIF\n      // Another Pro Tip: If you use this option, the video will not be paused, the object url not revoked, and\n      // the video will not be removed from the DOM.  You will need to handle this yourself.\n      // Whether or not you would like the user's camera to stay on after the GIF is created\n      // Note: The cameraStream Media object is passed back to you in the createGIF() callback function\n      'keepCameraOn': true,\n      // Expects a cameraStream Media object\n      // Note: Passing an existing camera stream will allow you to create another GIF and/or snapshot without\n      //\tasking for the user's permission to access the camera again if you are not using SSL\n      'cameraStream': this.state.stream,\n      'numFrames': 15,\n      'progressCallback': (progress) => {this.setState({progress: progress});},\n      'completeCallback': () => {this.setState({progress: 0})}\n    }, (obj) => {\n      if(!obj.error) {\n        this.props.saveGIF(obj.image);\n      }\n    });\n  }\n\n  render() {\n    return (\n        <div className=\"video-container\" style={{zIndex: 100}}>\n            <div style={{width: '100px', position: 'absolute', bottom: '4rem', left: '50%', transform: 'translateX(-50%)'}}>\n                <Circle percent={this.state.progress * 100} strokeWidth=\"10\" strokeColor=\"#e74c3c\" />\n                <button style={{padding: '2rem', position: 'absolute',left: '50%', transform: 'translate(-50%, -50%)', top: '48%', background: 'transparent', fontWeight: 'bold', color: 'white', border: 'none', fontSize: '2rem', outline: 'none'}} onClick={() => this.captureGIF()}>Rec.</button>\n\n            </div>\n            <video className=\"video\" id=\"preview-video\"></video>\n        </div>\n    );\n  }\n}\n\nexport default GIFCapture;\n","import React, { Component } from 'react';\nimport Axios from 'axios';\nimport secrets from './secrets/config.json';\nimport loader from './three-dots.svg';\n\nclass GIFPreview extends Component {\n\n  state = {\n    submitting: false\n  }\n  async submitGIF(image){\n    try{\n      this.setState({submitting: true});\n      let res = await Axios.post('https://api.imgur.com/3/image', {image: this.props.gif.split(',')[1]}, {headers: {Authorization: \"Client-ID \" + secrets.imgur.client_id}});\n      let deletehash = res.data.data.deletehash;\n      await Axios.post(`https://api.imgur.com/3/album/${this.props.albumId}/add`, {deletehashes:[deletehash]}, {headers: {Authorization: \"Client-ID \" + secrets.imgur.client_id}});\n    }catch(error){\n      alert('Error Uploading :(');\n    }\n    this.setState({submitting: false});\n    this.props.exit();\n  }\n\n  render() {\n    return (\n      <div style={{width: '100vw', height: '100vh', overflow: 'hidden', display: 'flex', alignItems:'center', background: `url(${this.props.gif}) no-repeat center center fixed`,\n      backgroundSize: 'cover'}}>\n       \n       <button style={{position: 'absolute', margin: '0 auto', top: '1rem', left: '1rem', backgroundColor: '#e74c3c', outline: 'none', border: 'none', height: '2rem', width: '2rem', borderRadius: '50%',fontSize: '1rem', color: 'white', fontWeight: 'bold'}} onClick={this.props.exit.bind(this)}>X</button>\n       {this.state.submitting ? <img src={loader} style={{position: 'absolute', margin: '0 auto', bottom: '4rem', left: '50%', transform: 'translateX(-50%)'}} /> : <button style={{position: 'absolute', margin: '0 auto', bottom: '4rem', left: '50%', transform: 'translateX(-50%)', fontSize: '2rem', color: 'white', fontWeight: 'bold', background: '#27ae60', borderRadius: '2rem', border: 'none', outline: 'none', padding: '.5rem 2.5rem'}} onClick={this.submitGIF.bind(this)}>Submit</button>}\n\n      </div>\n    );\n  }\n}\n\nexport default GIFPreview;\n","import React, { Component } from 'react';\nimport './App.css';\nimport GIFCapture from './GIFCapture';\nimport GIFPreview from './GIFPreview';\n\nclass CaptureGIFScreen extends Component {\n\n  state = {\n    gif: \"http://i.imgur.com/IUNMjf1.gif\",\n    capturing: true\n  }\n\n  setGIF(gif){\n      this.setState({gif: gif, capturing: false});\n  }\n\n  capture(){\n      this.setState({capturing: true});\n  }\n\n  render() {\n    return (\n      <div style={{width: '100%', height: '100%'}}>\n        {this.state.capturing ? \n        <GIFCapture saveGIF={this.setGIF.bind(this)} albumId={this.props.match.params.deletehash}/> \n        : \n        <GIFPreview gif={this.state.gif} albumId={this.props.match.params.deletehash} exit={this.capture.bind(this)}/>\n        }   \n      </div>\n    );\n  }\n}\n\nexport default CaptureGIFScreen;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Axios from 'axios';\nimport secrets from './secrets/config.json';\nimport * as QRCode from 'qrcode.react';\n\nclass PlayGIFScreen extends Component {\n\n  state = {\n    video: null,\n    gifs: [],\n    index: 0,\n    progress: 0,\n    bpm: 60,\n    multi: true,\n    flip: false\n  }\n\n  componentDidMount(){\n    this.getGIFs();\n    setInterval(() => {\n        this.getGIFs();\n    }, 300000);\n    setInterval(() => {\n        this.changeGIF();\n    }, 15000);\n  }\n\n  changeGIF(){\n    this.setState({index: Math.floor(this.state.gifs.length * Math.random()), multi: (Math.random() >= 0.5), flip: (Math.random() >= 0.5)})\n  }\n  async getGIFs(){\n    let res = await Axios.get(`https://api.imgur.com/3/album/${this.props.match.params.albumid}`, {headers: {Authorization: \"Client-ID \" + secrets.imgur.client_id}});\n    let gifs = res.data.data.images;\n    console.log(gifs);\n    this.setState({gifs: gifs});\n  }\n\n  render() {\n    return (\n      <div className=\"App\" style={{height: '100vh', width: '100vw'}}>\n          {this.state.gifs.length > 0 ? <div style={{width: '100%', height: '100%', minHeight: '100vh', transform: `scale(${this.state.flip ? -1 : 1})`, background: `url(${this.state.gifs[this.state.index].link}) ${this.state.multi ? 'center center / cover' : ''}`}} /> : \"\"}\n          {this.props.deletehash? <QRCode value={`https://johnnyracket.github.io/gif-beat/#/record/${this.props.deletehash}`}  style={{position: 'absolute', bottom: '1rem', right: '1rem', padding: '.5rem', background: 'white'}}/> : \"\" }\n      </div>\n    );\n  }\n}\n\nexport default PlayGIFScreen;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Axios from 'axios';\nimport { Route, Link, withRouter } from \"react-router-dom\";\nimport CaptureGIFScreen from './CaptureGIFScreen';\nimport PlayGIFScreen from './PlayGIFScreen';\nimport secrets from './secrets/config.json';\nimport bg from './pattern.svg';\n\nclass App extends Component {\n\n  state = {\n    albumId: \"null\",\n    deletehash: \"null\"\n  }\n\n  async createAlbum(){\n    let res = await Axios.post(\"https://api.imgur.com/3/album\", {} ,{headers: {Authorization: \"Client-ID \" + secrets.imgur.client_id}});\n    console.log(res.data.data.id);\n    console.log(res.data.data.deletehash);\n    await this.setState({albumId: res.data.data.id, deletehash: res.data.data.deletehash});\n    this.props.history.push(\"/view/\" + this.state.albumId);\n  }\n\n\n\n  render() {\n    return (\n      <div style={{width: '100%', height: '100%', minHeight: '100vh', background: `URL(${bg})`, boxSizing: 'border-box' }}>\n        <Route path=\"/\" exact render={() => (\n          <div style={{width: '100%', height: '100%',  padding: '4rem 1rem',  boxSizing: 'border-box' }}>\n            <div style={{display:'flex', flexDirection: 'column', width: '100%', maxWidth: '20rem', margin: '0 auto', background: 'white', padding: '2rem', borderRadius: '1rem', boxShadow: '0 0 90px 60px #fff', boxSizing: 'border-box'}}>\n            <h1 style={{color:'#f0932b', fontWeight: 'bold', fontSize: '5rem', textAlign: 'center', margin: '1rem 0 2rem'}}>Gif Beat</h1>\n              <input onChange={e => this.setState({albumId: e.target.value})} placeholder='ID Here...' style={{fontSize: '3rem', borderRadius: '.5rem', border: 'solid 4px #f0932b', padding: '.25rem .5rem', outline: 'none'}}></input>\n              <div style={{display: 'flex', flexDirection: 'row', margin: '1rem 0', alignItems: 'center'}}>\n                <Link to={\"/record/\" + this.state.albumId} style={{marginRight: '1rem', fontSize: '2rem', flex : 1, background:'#f0932b', padding: '1rem 0', borderRadius: '.5rem', border: 'none', fontWeight: 'bold', color: 'white', cursor: 'pointer', textAlign: 'center', textDecoration: 'none'}}>Join!</Link>\n                <Link to={\"/view/\" + this.state.albumId} style={{fontSize: '1rem', color: '#f0932b', background: 'transparent', outline: 'none', border: 'none', cursor: 'pointer', textAlign: 'center', textDecoration: 'none'}} >Re-Host</Link>\n              </div>\n              <div style={{margin: '0 auto', fontSize: '1.5rem', color: 'lightgrey'}}> or </div>\n              <button onClick={() => {this.createAlbum()}} style={{margin: '1rem 0', fontSize: '1.5rem', fontWeight: 'bold', color: '#f0932b', background: 'transparent', outline: 'none', border: 'none', cursor: 'pointer'}}>Create Party</button>\n            </div>\n          </div>\n        )}>\n        </Route>\n        <Route path=\"/record/:deletehash\" render={(props) => <CaptureGIFScreen albumId={this.state.albumId} {...props} />} />\n        <Route path=\"/view/:albumid\" render={(props) => <PlayGIFScreen albumId={this.state.albumId} deletehash={this.state.deletehash} {...props} />} />\n      </div>      \n    );}\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter} from \"react-router-dom\";\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/three-dots.7627bc82.svg\";","module.exports = __webpack_public_path__ + \"static/media/pattern.4c18f130.svg\";"],"sourceRoot":""}